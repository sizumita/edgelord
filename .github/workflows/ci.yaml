name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_cache:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install wasm target
        run: |
          rustup target add wasm32-unknown-unknown

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build workspace
        run: |
          cargo build --target=wasm32-unknown-unknown
          cargo build

  fmt:
    runs-on: ubuntu-latest

    needs: build_cache

    steps:
      - uses: actions/checkout@v3

      - run: rustup component add rustfmt

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: fmt
        run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    needs: build_cache
    steps:
      - uses: actions/checkout@v3

      - run: rustup component add clippy

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  test:
    runs-on: ubuntu-latest

    needs: build_cache

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Test
        run: cargo test --all -- --nocapture
